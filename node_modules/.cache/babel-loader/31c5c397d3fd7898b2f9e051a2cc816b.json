{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/radical/React/management/src/components/employeeManagement/addEmployee/Uploads.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { UploadProgress } from 'react-file-upload-progress';\nimport 'react-file-upload-progress/dist/index.css';\n\nconst Uploads = () => {\n  _s();\n\n  const [item1Completed, setItem1Completed] = useState(0);\n  const [item1Seconds, setItem1Seconds] = useState(100);\n  const [item2Completed, setItem2Completed] = useState(0);\n  const [item2Seconds, setItem2Seconds] = useState(100);\n  useEffect(() => {\n    if (item1Completed < 100) {\n      setTimeout(() => {\n        setItem1Completed(item1Completed + 10);\n      }, 1000);\n    }\n\n    if (item1Seconds > 0) {\n      setTimeout(() => {\n        setItem1Seconds(item1Seconds - 10);\n      }, 1000);\n    }\n\n    if (item1Completed < 100) {\n      setTimeout(() => {\n        setItem2Completed(item2Completed + 10);\n      }, 1000);\n    }\n\n    if (item1Seconds > 0) {\n      setTimeout(() => {\n        setItem2Seconds(item2Seconds - 10);\n      }, 1000);\n    }\n  });\n  const items = [{\n    id: 1,\n    fileName: 'this_is_some_file.jpg',\n    size: '1234567',\n    completedPercentage: item1Completed,\n    secLeft: item1Seconds\n  }, {\n    id: 2,\n    fileName: 'this_is_another_file.jpg',\n    size: '7654321',\n    completedPercentage: item2Completed,\n    secLeft: item2Seconds\n  }];\n  return /*#__PURE__*/_jsxDEV(UploadProgress, {\n    items: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Uploads, \"YU1OF+mEn0Wz11eGIKVwjKhLEDw=\");\n\n_c = Uploads;\nexport default Uploads;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploads\");","map":{"version":3,"sources":["/home/radical/React/management/src/components/employeeManagement/addEmployee/Uploads.js"],"names":["React","useEffect","useState","UploadProgress","Uploads","item1Completed","setItem1Completed","item1Seconds","setItem1Seconds","item2Completed","setItem2Completed","item2Seconds","setItem2Seconds","setTimeout","items","id","fileName","size","completedPercentage","secLeft"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAO,2CAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,GAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,cAAc,GAAG,GAArB,EAA0B;AACxBQ,MAAAA,UAAU,CAAC,MAAM;AACfP,QAAAA,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAjB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AACD,QAAIE,YAAY,GAAG,CAAnB,EAAsB;AACpBM,MAAAA,UAAU,CAAC,MAAM;AACfL,QAAAA,eAAe,CAACD,YAAY,GAAG,EAAhB,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AACD,QAAIF,cAAc,GAAG,GAArB,EAA0B;AACxBQ,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAjB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AACD,QAAIF,YAAY,GAAG,CAAnB,EAAsB;AACpBM,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,eAAe,CAACD,YAAY,GAAG,EAAhB,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GArBQ,CAAT;AAuBA,QAAMG,KAAK,GAAG,CACZ;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,uBAFZ;AAGEC,IAAAA,IAAI,EAAE,SAHR;AAIEC,IAAAA,mBAAmB,EAAEb,cAJvB;AAKEc,IAAAA,OAAO,EAAEZ;AALX,GADY,EAQZ;AACEQ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,QAAQ,EAAE,0BAFZ;AAGEC,IAAAA,IAAI,EAAE,SAHR;AAIEC,IAAAA,mBAAmB,EAAET,cAJvB;AAKEU,IAAAA,OAAO,EAAER;AALX,GARY,CAAd;AAgBA,sBAAO,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9CD;;GAAMV,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { UploadProgress } from 'react-file-upload-progress'\nimport 'react-file-upload-progress/dist/index.css'\n\nconst Uploads = () => {\n  const [item1Completed, setItem1Completed] = useState(0)\n  const [item1Seconds, setItem1Seconds] = useState(100)\n  const [item2Completed, setItem2Completed] = useState(0)\n  const [item2Seconds, setItem2Seconds] = useState(100)\n\n  useEffect(() => {\n    if (item1Completed < 100) {\n      setTimeout(() => {\n        setItem1Completed(item1Completed + 10)\n      }, 1000)\n    }\n    if (item1Seconds > 0) {\n      setTimeout(() => {\n        setItem1Seconds(item1Seconds - 10)\n      }, 1000)\n    }\n    if (item1Completed < 100) {\n      setTimeout(() => {\n        setItem2Completed(item2Completed + 10)\n      }, 1000)\n    }\n    if (item1Seconds > 0) {\n      setTimeout(() => {\n        setItem2Seconds(item2Seconds - 10)\n      }, 1000)\n    }\n  })\n\n  const items = [\n    {\n      id: 1,\n      fileName: 'this_is_some_file.jpg',\n      size: '1234567',\n      completedPercentage: item1Completed,\n      secLeft: item1Seconds\n    },\n    {\n      id: 2,\n      fileName: 'this_is_another_file.jpg',\n      size: '7654321',\n      completedPercentage: item2Completed,\n      secLeft: item2Seconds\n    }\n  ]\n  return <UploadProgress items={items} />\n}\n\nexport default Uploads"]},"metadata":{},"sourceType":"module"}