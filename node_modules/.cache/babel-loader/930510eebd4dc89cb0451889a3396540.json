{"ast":null,"code":"import { setQueryParams, getApiUrl, getAuthToken, handleTokenExpiry } from '.';\n\nconst get = (url = '', {\n  params\n} = {}) => new Promise((resolve, reject) => {\n  fetch(`${getApiUrl()}/${url}${setQueryParams(params)}`, {\n    method: 'get',\n    mode: 'cors',\n    headers: {\n      'x-arising-token': getAuthToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json()).then(data => {\n    handleTokenExpiry(data);\n    resolve(data);\n  }).catch(e => reject(e));\n});\n\nconst post = (url = '', body, {\n  params\n} = {}) => new Promise((resolve, reject) => {\n  fetch(`${getApiUrl()}/${url}${setQueryParams(params)}`, {\n    method: 'post',\n    body: JSON.stringify(body),\n    headers: {\n      'x-arising-token': getAuthToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json()).then(data => {\n    handleTokenExpiry(data);\n    resolve(data);\n  }).catch(e => reject(e));\n});\n\nconst put = (url = '', body) => new Promise((resolve, reject) => {\n  fetch(`${getApiUrl()}/${url}`, {\n    method: 'put',\n    body: JSON.stringify(body),\n    headers: {\n      'x-arising-token': getAuthToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json()).then(data => {\n    handleTokenExpiry(data);\n    resolve(data);\n  }).catch(e => reject(e));\n});\n\nconst deleteCall = (url = '') => new Promise((resolve, reject) => {\n  fetch(`${getApiUrl()}/${url}`, {\n    method: 'DELETE',\n    headers: {\n      'x-arising-token': getAuthToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json()).then(data => {\n    handleTokenExpiry(data);\n    resolve(data);\n  }).catch(e => reject(e));\n});\n\nconst fileUpload = formData => new Promise((resolve, reject) => {\n  fetch(`${getApiUrl()}/file/upload/${getAuthToken()}`, {\n    method: 'POST',\n    body: formData\n  }).then(res => res.json()).then(data => {\n    handleTokenExpiry(data);\n    resolve(data);\n  }).catch(e => reject(e));\n});\n\nexport { get, post, put, deleteCall, fileUpload };","map":{"version":3,"sources":["/home/radical/React/user-management/src/utils/network.js"],"names":["setQueryParams","getApiUrl","getAuthToken","handleTokenExpiry","get","url","params","Promise","resolve","reject","fetch","method","mode","headers","then","res","json","data","catch","e","post","body","JSON","stringify","put","deleteCall","fileUpload","formData"],"mappings":"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","sourcesContent":["import {\n    setQueryParams, getApiUrl, getAuthToken, handleTokenExpiry,\n} from '.';\n\nconst get = (url = '', { params } = {}) => new Promise((resolve, reject) => {\n    fetch(`${getApiUrl()}/${url}${setQueryParams(params)}`, {\n        method: 'get',\n        mode: 'cors',\n        headers: {\n            'x-arising-token': getAuthToken(),\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n        .then(data => {\n            handleTokenExpiry(data);\n            resolve(data);\n        }).catch(e => reject(e));\n});\n\nconst post = (url = '', body, { params } = {}) => new Promise((resolve, reject) => {\n    fetch(`${getApiUrl()}/${url}${setQueryParams(params)}`, {\n        method: 'post',\n        body: JSON.stringify(body),\n        headers: {\n            'x-arising-token': getAuthToken(),\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n        .then(data => {\n            handleTokenExpiry(data);\n            resolve(data);\n        }).catch(e => reject(e));\n});\n\nconst put = (url = '', body) => new Promise((resolve, reject) => {\n    fetch(`${getApiUrl()}/${url}`, {\n        method: 'put',\n        body: JSON.stringify(body),\n        headers: {\n            'x-arising-token': getAuthToken(),\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n        .then(data => {\n            handleTokenExpiry(data);\n            resolve(data);\n        }).catch(e => reject(e));\n});\n\nconst deleteCall = (url = '') => new Promise((resolve, reject) => {\n    fetch(`${getApiUrl()}/${url}`, {\n        method: 'DELETE',\n        headers: {\n            'x-arising-token': getAuthToken(),\n            'Content-Type': 'application/json',\n        },\n    }).then(res => res.json())\n        .then(data => {\n            handleTokenExpiry(data);\n            resolve(data);\n        }).catch(e => reject(e));\n});\n\nconst fileUpload = (formData) => new Promise((resolve, reject) => {\n    fetch(`${getApiUrl()}/file/upload/${getAuthToken()}`, {\n        method: 'POST',\n        body: formData,\n    }).then(res => res.json())\n        .then(data => {\n            handleTokenExpiry(data);\n            resolve(data);\n        }).catch(e => reject(e));\n});\n\nexport {\n    get,\n    post,\n    put,\n    deleteCall,\n    fileUpload,\n};\n"]},"metadata":{},"sourceType":"module"}