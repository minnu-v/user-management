{"ast":null,"code":"import isEmpty from 'lodash/isEmpty';\nimport { API_BASE_URL_DEV, loginTypes, API_BASE_URL_PROD, courseTypes, institutionTypes, admissionTypes, LOGOUT_ACTION } from '../constants';\nimport store from '../redux';\nexport const getUrlQueryParams = () => window.location.search.substr(1).split('&').reduce((params, item) => {\n  const [key, value] = item.split('=');\n  params = { ...params,\n    [key]: value\n  };\n  return params;\n}, {});\nexport const setQueryParams = params => {\n  const _params = [];\n  let combinedQuery = '';\n  if (isEmpty(params)) return '';\n  Object.keys(params).forEach(function (key, value) {\n    if (Array.isArray(params[key]) && params[key].length > 0) {\n      combinedQuery = combinedQuery + setRepeatedParams(key, params[key]);\n    } else if (params[key] !== \"\" && !Array.isArray(params[key])) {\n      _params[key] = params[key];\n    }\n  });\n  const query = Object.keys(_params).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&');\n  return combinedQuery ? `?${query}&${combinedQuery}` : `?${query}`;\n};\nexport const setRepeatedParams = (key, valueArr) => {\n  if (isEmpty(valueArr)) return '';\n  const query = valueArr.map(k => `${encodeURIComponent(key)}=${encodeURIComponent(k)}`).join('&');\n  return `${query}`;\n};\nexport const getApiUrl = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'prod':\n      return API_BASE_URL_PROD;\n\n    default:\n      return API_BASE_URL_DEV;\n  }\n};\nexport const getAuthToken = () => {\n  const userData = localStorage.getItem('userData');\n  const user = userData ? JSON.parse(userData) : {};\n  return user.token || '';\n};\nexport const handleTokenExpiry = data => {\n  if (data.code === 401 && window.location.pathname !== '/login' && window.location.pathname !== '/register') {\n    store.dispatch({\n      type: LOGOUT_ACTION\n    });\n    localStorage.clear();\n    window.location.reload();\n  }\n};\nexport const getLoginType = () => {\n  const {\n    type\n  } = getUrlQueryParams();\n  return loginTypes.find(login => login.value === parseInt(type));\n};\nexport const createFileUrl = fileId => `${getApiUrl()}/file/${getAuthToken()}/${fileId}`;\nexport const formatUserName = ({\n  firstName,\n  middleName,\n  lastName\n}) => `${firstName} ${middleName ? `${middleName} ` : ''}${lastName ? `${lastName} ` : ''}`.trim();\nexport const formatPhoneNumber = ({\n  countryCode,\n  phoneNumber\n}) => `+${countryCode}-${phoneNumber}`.trim();\nexport const formatAddress = ({\n  address: {\n    lineOne,\n    locality,\n    state,\n    district,\n    country,\n    pincode\n  } = {}\n}) => lineOne ? `${lineOne}, ${locality}, ${district}, ${state}, ${country}, ${pincode}` : '';\nexport const getCourseType = type => courseTypes.find(course => course.value === parseInt(type)) || {};\nexport const getInstitutionType = type => institutionTypes.find(i => i.value === parseInt(type)) || {};\nexport const getAdmissionType = type => admissionTypes.find(admission => admission.value === parseInt(type)) || {};","map":{"version":3,"sources":["/home/radical/React/user-management/src/utils/index.js"],"names":["isEmpty","API_BASE_URL_DEV","loginTypes","API_BASE_URL_PROD","courseTypes","institutionTypes","admissionTypes","LOGOUT_ACTION","store","getUrlQueryParams","window","location","search","substr","split","reduce","params","item","key","value","setQueryParams","_params","combinedQuery","Object","keys","forEach","Array","isArray","length","setRepeatedParams","query","map","k","encodeURIComponent","join","valueArr","getApiUrl","process","env","REACT_APP_ENV","getAuthToken","userData","localStorage","getItem","user","JSON","parse","token","handleTokenExpiry","data","code","pathname","dispatch","type","clear","reload","getLoginType","find","login","parseInt","createFileUrl","fileId","formatUserName","firstName","middleName","lastName","trim","formatPhoneNumber","countryCode","phoneNumber","formatAddress","address","lineOne","locality","state","district","country","pincode","getCourseType","course","getInstitutionType","i","getAdmissionType","admission"],"mappings":"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","sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport { API_BASE_URL_DEV, loginTypes, API_BASE_URL_PROD, courseTypes, institutionTypes, admissionTypes, LOGOUT_ACTION } from '../constants';\nimport store from '../redux';\n\nexport const getUrlQueryParams = () => window.location.search\n    .substr(1)\n    .split('&')\n    .reduce((params, item) => {\n        const [key, value] = item.split('=')\n        params = {\n            ...params,\n            [key]: value,\n        };\n        return params\n    }, {});\n\nexport const setQueryParams = params => {\n    const _params = [];\n    let combinedQuery = '';\n    if (isEmpty(params)) return '';\n\n    Object.keys(params).forEach(function (key, value) {\n        if (Array.isArray(params[key]) && params[key].length > 0) {\n            combinedQuery = combinedQuery + (setRepeatedParams(key, params[key]));\n        } else if (params[key] !== \"\" && !Array.isArray(params[key])) {\n            _params[key] = params[key]\n        }\n    })\n\n    const query = Object.keys(_params).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&');\n    return combinedQuery ? `?${query}&${combinedQuery}` : `?${query}`;\n\n};\n\nexport const setRepeatedParams = (key, valueArr) => {\n    if (isEmpty(valueArr)) return '';\n    const query = valueArr.map(k => `${encodeURIComponent(key)}=${encodeURIComponent(k)}`).join('&');\n    return `${query}`;\n};\n\nexport const getApiUrl = () => {\n    switch (process.env.REACT_APP_ENV) {\n        case 'prod': return API_BASE_URL_PROD;\n        default: return API_BASE_URL_DEV;\n    }\n};\n\nexport const getAuthToken = () => {\n    const userData = localStorage.getItem('userData');\n    const user = userData ? JSON.parse(userData) : {};\n    return user.token || '';\n};\n\nexport const handleTokenExpiry = data => {\n    if (data.code === 401 && window.location.pathname !== '/login' && window.location.pathname !== '/register') {\n        store.dispatch({ type: LOGOUT_ACTION });\n        localStorage.clear();\n        window.location.reload();\n    }\n};\n\nexport const getLoginType = () => {\n    const { type } = getUrlQueryParams();\n    return loginTypes.find(login => login.value === parseInt(type));\n};\n\nexport const createFileUrl = fileId => `${getApiUrl()}/file/${getAuthToken()}/${fileId}`; \n\nexport const formatUserName = ({ firstName, middleName, lastName }) => `${firstName} ${middleName ? `${middleName} ` : ''}${lastName ? `${lastName} ` : ''}`.trim();\nexport const formatPhoneNumber = ({ countryCode, phoneNumber }) => `+${countryCode}-${phoneNumber}`.trim();\nexport const formatAddress = ({ address: {\n    lineOne, locality, state, district, country, pincode,\n} = {} }) => lineOne ? `${lineOne}, ${locality}, ${district}, ${state}, ${country}, ${pincode}` : '';\n\nexport const getCourseType = type => courseTypes.find(course => course.value === parseInt(type)) || {};\nexport const getInstitutionType = type => institutionTypes.find(i => i.value === parseInt(type)) || {};\nexport const getAdmissionType = type => admissionTypes.find(admission => admission.value === parseInt(type)) || {};"]},"metadata":{},"sourceType":"module"}