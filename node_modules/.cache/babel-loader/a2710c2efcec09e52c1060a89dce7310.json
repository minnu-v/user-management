{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/radical/React/management/src/components/employeeManagement/addEmployee/Uploads.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst API_BASE = \"http://localhost:5000\";\n\nfunction submitForm(contentType, data, setResponse) {\n  axios({\n    url: `${API_BASE}/upload`,\n    method: 'POST',\n    data: data,\n    headers: {\n      'Content-Type': contentType\n    }\n  }).then(response => {\n    setResponse(response.data);\n  }).catch(error => {\n    setResponse(\"error\");\n  });\n}\n\nfunction Uploads() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [desc, setDesc] = useState(\"\");\n\n  function uploadWithFormData() {}\n\n  function uploadWithJSON() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"File Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          vaue: title,\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          placeholder: \"Give a title to your upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: desc,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Upload as Form\",\n        onClick: uploadWithFormData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Upload as JSON\",\n        onClick: uploadWithJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 2\n  }, this);\n}\n\n_s(Uploads, \"rg6swvWxMGgYUEfOzlk4sQvQ4as=\");\n\n_c = Uploads;\nexport default Uploads;\n\nvar _c;\n\n$RefreshReg$(_c, \"Uploads\");","map":{"version":3,"sources":["/home/radical/React/management/src/components/employeeManagement/addEmployee/Uploads.js"],"names":["React","useState","axios","API_BASE","submitForm","contentType","data","setResponse","url","method","headers","then","response","catch","error","Uploads","title","setTitle","file","setFile","desc","setDesc","uploadWithFormData","uploadWithJSON","e","target","value","files"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,IAAjC,EAAuCC,WAAvC,EAAoD;AACnDL,EAAAA,KAAK,CAAC;AACNM,IAAAA,GAAG,EAAG,GAAEL,QAAS,SADX;AAENM,IAAAA,MAAM,EAAE,MAFF;AAGNH,IAAAA,IAAI,EAAEA,IAHA;AAINI,IAAAA,OAAO,EAAE;AACT,sBAAgBL;AADP;AAJH,GAAD,CAAL,CAOGM,IAPH,CAOSC,QAAD,IAAc;AACtBL,IAAAA,WAAW,CAACK,QAAQ,CAACN,IAAV,CAAX;AACC,GATD,EASGO,KATH,CASUC,KAAD,IAAW;AACpBP,IAAAA,WAAW,CAAC,OAAD,CAAX;AACC,GAXD;AAYA;;AAED,SAASQ,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASqB,kBAAT,GAA6B,CAE5B;;AAED,WAASC,cAAT,GAAyB,CAExB;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACA;AAAA,8CAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAEP,KAAzB;AACA,UAAA,QAAQ,EAAGQ,CAAD,IAAO;AAAEP,YAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAA0B,WAD7C;AAEA,UAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AAAA,wCAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,QAAQ,EAAGF,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eAaA;AAAA,+CAEA;AAAU,UAAA,KAAK,EAAEP,IAAjB;AAAuB,UAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA,eAkBA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,gBAA3B;AAA4C,QAAA,OAAO,EAAEJ;AAArD;AAAA;AAAA;AAAA;AAAA,cAlBA,eAmBA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,gBAA3B;AAA4C,QAAA,OAAO,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,cAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA0BA;;GAvCQR,O;;KAAAA,O;AAyCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst API_BASE = \"http://localhost:5000\"\n\nfunction submitForm(contentType, data, setResponse) {\n axios({\n url: `${API_BASE}/upload`,\n method: 'POST',\n data: data,\n headers: {\n 'Content-Type': contentType\n }\n }).then((response) => {\n setResponse(response.data);\n }).catch((error) => {\n setResponse(\"error\");\n })\n}\n\nfunction Uploads() {\n const [title, setTitle] = useState(\"\");\n const [file, setFile] = useState(null);\n const [desc, setDesc] = useState(\"\");\n\n function uploadWithFormData(){\n\n }\n\n function uploadWithJSON(){\n\n }\n\n return (\n <div className=\"App\">\n <h2>Upload Form</h2>\n <form>\n <label>\n File Title\n <input type=\"text\" vaue={title} \n onChange={(e) => { setTitle(e.target.value )}} \n placeholder=\"Give a title to your upload\" />\n </label>\n\n <label>\n File\n <input type=\"file\" name=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n </label>\n\n <label>\n Description\n <textarea value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>\n </label>\n\n <input type=\"button\" value=\"Upload as Form\" onClick={uploadWithFormData} />\n <input type=\"button\" value=\"Upload as JSON\" onClick={uploadWithJSON}/>\n </form>\n </div>\n );\n}\n\nexport default Uploads;"]},"metadata":{},"sourceType":"module"}